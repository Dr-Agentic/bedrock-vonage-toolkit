service: bedrock-vonage-toolkit

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  environment:
    VONAGE_CREDENTIALS_SECRET_NAME: bedrock-vonage-toolkit/credentials
    NODE_ENV: ${self:provider.stage}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: arn:aws:logs:*:*:*
        - Effect: Allow
          Action:
            - secretsmanager:GetSecretValue
          Resource: 
            - arn:aws:secretsmanager:${self:provider.region}:*:secret:bedrock-vonage-toolkit/credentials-*

plugins:
  - serverless-esbuild
  - serverless-offline

custom:
  esbuild:
    bundle: true
    minify: true
    sourcemap: true
    target: 'node18'
    platform: 'node'
    concurrency: 10
    external:
      - 'aws-sdk'

functions:
  getNumberInsight:
    handler: src/actions/getInsightData.handler
    events:
      - http:
          path: number-insight
          method: post
          cors: true
          request:
            schemas:
              application/json:
                schema:
                  type: object
                  required:
                    - phoneNumber
                  properties:
                    phoneNumber:
                      type: string
                      pattern: '^\+[1-9]\d{1,14}$'
                      description: 'Phone number in E.164 format (e.g., +12025550123)'
                      
  requestVerification:
    handler: src/actions/requestVerification.handler
    events:
      - http:
          path: verify-request
          method: post
          cors: true
          request:
            schemas:
              application/json:
                schema:
                  type: object
                  required:
                    - phoneNumber
                    - brand
                  properties:
                    phoneNumber:
                      type: string
                      pattern: '^\+[1-9]\d{1,14}$'
                      description: 'Phone number in E.164 format (e.g., +12025550123)'
                    brand:
                      type: string
                      description: 'Name of your brand/application to include in the verification message'
                    codeLength:
                      type: integer
                      minimum: 4
                      maximum: 10
                      default: 4
                      description: 'Length of the verification code (4-10 digits)'
                    locale:
                      type: string
                      default: 'en-us'
                      description: 'Locale for the verification message'
                    channel:
                      type: string
                      enum: ['sms', 'voice', 'whatsapp']
                      default: 'sms'
                      description: 'Channel to send the verification code through'
                      
  checkVerification:
    handler: src/actions/checkVerification.handler
    events:
      - http:
          path: verify-check
          method: post
          cors: true
          request:
            schemas:
              application/json:
                schema:
                  type: object
                  required:
                    - requestId
                    - code
                  properties:
                    requestId:
                      type: string
                      description: 'The request_id from the initial verification request'
                    code:
                      type: string
                      description: 'The verification code entered by the user'
                      
  cancelVerification:
    handler: src/actions/cancelVerification.handler
    events:
      - http:
          path: verify-cancel
          method: post
          cors: true
          request:
            schemas:
              application/json:
                schema:
                  type: object
                  required:
                    - requestId
                  properties:
                    requestId:
                      type: string
                      description: 'The request_id from the initial verification request'

resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: ApiGatewayRestApi
    GatewayResponseDefault5XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_5XX
        RestApiId:
          Ref: ApiGatewayRestApi
