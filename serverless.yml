service: bedrock-vonage-toolkit

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'dev'}
  memorySize: 256
  timeout: 30
  logRetentionInDays: 14
  
  # IAM permissions
  iam:
    role:
      statements:
        # Allow access to Secrets Manager
        - Effect: Allow
          Action:
            - secretsmanager:GetSecretValue
          Resource:
            - arn:aws:secretsmanager:${aws:region}:${aws:accountId}:secret:vonage/*
        # Allow access to CloudWatch Logs
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: arn:aws:logs:${aws:region}:${aws:accountId}:log-group:/aws/lambda/*
  
  # Environment variables
  environment:
    NODE_ENV: ${opt:stage, 'dev'}
    VONAGE_SECRET_NAME: vonage/api-credentials-${opt:stage, 'dev'}

plugins:
  - serverless-esbuild
  - serverless-offline

custom:
  esbuild:
    bundle: true
    minify: true
    sourcemap: true
    target: node18
    platform: node
    concurrency: 10
    packager: npm
    # No longer excluding aws-sdk since we're using AWS SDK v3 modules

functions:
  getNumberInsight:
    handler: src/actions/getInsightData.handler
    description: Get detailed information about a phone number using Vonage Number Insight API
    events:
      - http:
          path: /number-insight
          method: post
          cors: true
  
  sendSms:
    handler: src/actions/sendSms.handler
    description: Send SMS messages using Vonage SMS API
    events:
      - http:
          path: /sms
          method: post
          cors: true
  
  requestVerification:
    handler: src/actions/requestVerification.handler
    description: Request phone number verification using Vonage Verify API
    events:
      - http:
          path: /verify/request
          method: post
          cors: true
  
  checkVerification:
    handler: src/actions/checkVerification.handler
    description: Check verification code using Vonage Verify API
    events:
      - http:
          path: /verify/check
          method: post
          cors: true
  
  cancelVerification:
    handler: src/actions/cancelVerification.handler
    description: Cancel verification request using Vonage Verify API
    events:
      - http:
          path: /verify/cancel
          method: post
          cors: true

resources:
  Resources:
    # Create a Secrets Manager secret for Vonage credentials
    VonageApiCredentials:
      Type: AWS::SecretsManager::Secret
      Properties:
        Name: vonage/api-credentials-${opt:stage, 'dev'}
        Description: Vonage API credentials for the Bedrock Vonage Toolkit
        SecretString: '{"apiKey":"REPLACE_WITH_YOUR_API_KEY","apiSecret":"REPLACE_WITH_YOUR_API_SECRET"}'
        Tags:
          - Key: Project
            Value: bedrock-vonage-toolkit
          - Key: Environment
            Value: ${opt:stage, 'dev'}
            
    # Add Lambda resource policies to allow Bedrock to invoke the functions
    GetNumberInsightLambdaPermission:
      Type: AWS::Lambda::Permission
      Properties:
        FunctionName: !Ref GetNumberInsightLambdaFunction
        Action: lambda:InvokeFunction
        Principal: bedrock.amazonaws.com
        SourceAccount: !Ref AWS::AccountId
        
    SendSmsLambdaPermission:
      Type: AWS::Lambda::Permission
      Properties:
        FunctionName: !Ref SendSmsLambdaFunction
        Action: lambda:InvokeFunction
        Principal: bedrock.amazonaws.com
        SourceAccount: !Ref AWS::AccountId
        
    RequestVerificationLambdaPermission:
      Type: AWS::Lambda::Permission
      Properties:
        FunctionName: !Ref RequestVerificationLambdaFunction
        Action: lambda:InvokeFunction
        Principal: bedrock.amazonaws.com
        SourceAccount: !Ref AWS::AccountId
        
    CheckVerificationLambdaPermission:
      Type: AWS::Lambda::Permission
      Properties:
        FunctionName: !Ref CheckVerificationLambdaFunction
        Action: lambda:InvokeFunction
        Principal: bedrock.amazonaws.com
        SourceAccount: !Ref AWS::AccountId
        
    CancelVerificationLambdaPermission:
      Type: AWS::Lambda::Permission
      Properties:
        FunctionName: !Ref CancelVerificationLambdaFunction
        Action: lambda:InvokeFunction
        Principal: bedrock.amazonaws.com
        SourceAccount: !Ref AWS::AccountId
